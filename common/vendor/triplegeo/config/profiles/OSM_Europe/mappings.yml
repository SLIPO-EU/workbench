osm_id:
  partOf: sourceInfo
  entity: source
  predicate: slipo:poiRef
DATA_SOURCE:                      ##SLIPO-specific constraint: Specifies the data source provider of each POI; Assuming that extra attribute "DATA_SOURCE" generated by TripleGeo is always used for constructing the URIs for data sources
  partOf: sourceInfo
  entity: source
  predicate: slipo:sourceRef
  generateWith: getDataSource     ##Function call to fill-in this value that does NOT exist in the original dataset
CATEGORY_URI:                     ##SLIPO-specific constraint: Specifies the URI for the category assigned to each POI; Assuming that extra attribute "CATEGORY_URI" generated by TripleGeo is always used for constructing the URIs for categories
  entity: category
  predicate: slipo:category
  datatype: uri
last_update:  
  entity: lastUpdated
  predicate: slipo:lastUpdated  
  datatype: datetime
phone:
  instanceOf: contact
  entity: phone
  predicate: slipo:phone
  type: phone
email:
  instanceOf: contact
  entity: email
  predicate: slipo:email
  type: email
fax:
  instanceOf: contact
  entity: fax
  predicate: slipo:fax
  type: fax
website:
  entity: homepage
  predicate: slipo:homepage
  datatype: uri
wikipedia:
  entity: wikipedia
  predicate: slipo:otherLink
  datatype: uri
opening_hours:
  partOf: timeSlot                ##FIXME: Work-around for SLIPO ontology: This must be actually specified as an instance of the TimeSlot entity.
  entity: openingHours
  predicate: slipo:concat
name:
  instanceOf: name
  entity: name
  predicate: slipo:name
  type: official
name_%LANG:                       ##Specification for multi-faceted attribute values (i.e., names in multiple languages)
  instanceOf: name
  entity: name
  predicate: slipo:name
  type: NONE                      ##Instructs NOT to issue triples regarding resource type
  language: getLanguage           ##Function call that is invoked at runtime to extract the language tag from the attribute name
int_name:
  instanceOf: name
  entity: int_name
  predicate: slipo:name
  type: international  
alt_name:
  instanceOf: name
  entity: alt_name
  predicate: slipo:name
  type: alternate  
street:
  partOf: address
  entity: address
  predicate: slipo:street
housenumber:
  partOf: address
  entity: address
  predicate: slipo:number
city:
  partOf: address
  entity: address
  predicate: slipo:locality
country:
  partOf: address
  entity: address
  predicate: slipo:country 
postcode:
  partOf: address
  entity: address
  predicate: slipo:postcode   
image:
  partOf: media                ##FIXME: Work-around for SLIPO ontology: This must be actually specified as an instance of the Media entity.
  entity: media
  predicate: slipo:url  
  type: image
  datatype: uri
description:
  entity: description
  predicate: slipo:description
LONGITUDE:
  entity: lon
  predicate: wgs84_pos:long
  datatype: float
  generateWith: geometry.getLongitude           ##Function call to fill-in this value that does NOT exist in the original dataset
LATITUDE:
  entity: lat
  predicate: wgs84_pos:lat
  datatype: float
  generateWith: geometry.getLatitude            ##Function call to fill-in this value that does NOT exist in the original dataset  
AREA:                                           ##Auto-generated attribute (NOT existing in the original data) based on geometry
  entity: area
  predicate: slipo:area
  datatype: float  
  generateWith: geometry.getArea                ##Function call to fill-in this value that does NOT exist in the original dataset
LENGTH:                                         ##Auto-generated attribute (NOT existing in the original data) based on geometry
  entity: length
  predicate: slipo:length
  datatype: float  
  generateWith: geometry.getLength              ##Function call to fill-in this value that does NOT exist in the original dataset  