##############################
## Data provider: OpenStreetMap
## Created: 31/1/2018
## Last revised: 5/3/2018
##############################

## Possible input formats: SHAPEFILE, DBMS, CSV, GPX, GEOJSON, XML, OSM
inputFormat =

## Conversion mode: specify either 'GRAPH' (on disk) or 'STREAM' (in-memory) or 'RML' (for applying user-specified RML mappings)
mode = STREAM

## OPTIONAL parameter for the encoding (character set) for strings in the input data. If not specified, UTF-8 encoding is assumed.
encoding = UTF-8

## MANDATORY for CSV input only (case-insensitive): specify the character delimiting attribute values
delimiter=|

## MANDATORY for CSV input only (case-insensitive): specify a quote character for string values in attributes
quote=

## Paths to directories used by the application; Output file uses the name of the input table by default
tmpDir = ./tmp
inputFiles =
outputDir = 

##Number of entities to handle in each batch (only applicable to STREAM and RML modes)
#batchSize = 10

## File containing mappings from input schema to RDF
## Specify either a .ttl file (for RML mode) or a .yml file (for GRAPH or STREAM modes)
mappingSpec = ./test/conf/slipo/OSM_Europe_slipo_mappings_PostGIS.yml

## File (YML or CSV) containing classification hierarchy of categories
classificationSpec = ./test/data/OSM_POI_sample_classification.yml
classifyByName = true

## Possible export formats: RDF/XML (default), RDF/XML-ABBREV, N-TRIPLES, TURTLE (or TTL), N3
serialization = N-TRIPLES

## Specify the spatial ontology for geometries in the exported data. 
## Possible values: 1) GeoSPARQL, 2) Virtuoso (legacy RDF ontology for points only), 3) wgs84_pos (for WGS84 Geoposition RDF vocabulary)
targetGeoOntology = GeoSPARQL

attrKey=osm_id
attrName=name
attrCategory=type
attrGeometry=shape
attrX=
attrY=

## Specify whether a .CSV file will be also extracted for registering features in the SLIPO Registry. 
## Each record in the resulting .CSV file will include information extracted from the basic attributes specified in the previous parameters.
#registerFeatures = true

##############################
#Namespaces parameters
##############################
#Name of the data source for the input features
featureSource = OpenStreetMap

# Optional parameters. Change these parameters if you want to use different values for the namespaces of generated URIs
nsOntology = http://slipo.eu/def#
nsGeometry = http://www.opengis.net/ont/geosparql#
nsFeatureURI = http://slipo.eu/id/poi/
nsClassURI = http://slipo.eu/id/term/
nsClassificationURI = http://slipo.eu/id/classification/
nsDataSourceURI = http://slipo.eu/id/poisource/

## Specify correspondence between a prefix and its namespace (mainly used in attribute mappings)
prefixes = slipo, geo, xsd, rdfs, wgs84_pos
namespaces = http://slipo.eu/def#, http://www.opengis.net/ont/geosparql#, http://www.w3.org/2001/XMLSchema#, http://www.w3.org/1999/02/22-rdf-syntax-ns#, http://www.w3.org/2003/01/geo/wgs84_pos#


##############################
# Spatial Reference parameters
##############################
# Optional parameters. These fields should be filled in if a transformation between EPSG reference systems is needed
# If not specified, geometries are assumed in WGS84 reference system (EPSG:4326).
##sourceCRS=EPSG:4326
##targetCRS=EPSG:2100

# Default lang for the labels created in the output RDF. By default, the value will be English-en
defaultLang=en

