
server.port = 8081

server.login.force-https = false

# Log4j configuration properties
logging.config = classpath:log4j2-testing.xml

#
# HTTP session
#

spring.session.store-type = none

#
# JPA data
#

#spring.datasource.url = jdbc:h2:mem:hello-spring
#spring.datasource.username = sa
#spring.datasource.password = 
#spring.datasource.driver-class-name = org.h2.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

spring.datasource.url = jdbc:postgresql://localhost:5432/slipo-workbench-tests
spring.datasource.username = slipo
spring.datasource.password = slipo
spring.datasource.driver-class-name = org.postgresql.Driver

spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.postgis.PostgisDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect

spring.jpa.hibernate.use-new-id-generator-mappings = true
spring.jpa.show-sql = false
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = create

spring.jpa.properties.javax.persistence.schema-generation.scripts.action = create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target = target/generated-sql/testing/schema.sql

#
# Slipo
#

slipo.rpc-server.url = http://localhost:9080/

slipo.temp-dir = ${user.home}/var/slipo-workbench/temp
slipo.catalog.data-dir = ${user.home}/var/slipo-workbench/catalog/data
