
server.address = 127.0.0.1
server.port = 9081

server.login.force-https = false

# Log4j configuration properties
logging.config = classpath:log4j2-testing.xml

#
# JPA data
#

#spring.datasource.url = jdbc:h2:mem:hello-spring
#spring.datasource.username = sa
#spring.datasource.password = 
#spring.datasource.driver-class-name = org.h2.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

spring.datasource.url = jdbc:postgresql://localhost:5432/slipo-workbench-tests
spring.datasource.username = slipo
spring.datasource.password = slipo
spring.datasource.driver-class-name = org.postgresql.Driver

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.hibernate.use-new-id-generator-mappings = true

spring.jpa.show-sql = true
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = create

spring.jpa.properties.javax.persistence.schema-generation.scripts.action = create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target = target/generated-sql/testing/schema.sql

#
# Spring Batch
#

spring.batch.initializer.enabled = true 
spring.batch.job.enabled = false
spring.batch.job.names =
#spring.batch.schema = classpath:org/springframework/batch/core/schema-@@platform@@.sql
spring.batch.schema = classpath:db/scripts/create-spring-batch-@@platform@@.sql
spring.batch.table-prefix = rpc.batch_


#
# Slipo RPC Service
#

slipo.rpc-server.job-service.stop-on-shutdown = false
slipo.rpc-server.job-service.recover-on-init = false

slipo.rpc-server.jobs.data-dir = /tmp/slipo-workbench/jobs/
slipo.rpc-server.workflows.data-dir = /tmp/slipo-workbench/workflows/

slipo.rpc-server.workflows.workflow-scheduler.cleanup.cron = 0 0 0/12 * * *
slipo.rpc-server.workflows.workflow-scheduler.cleanup.expire-after-update = 43200
